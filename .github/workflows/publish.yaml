name: Publish

on:
  push:
    tags:
    - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
    - uses: actions/cache@v1
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username '${{ secrets.DOCKER_USERNAME }}' --password-stdin
    - run: |
        make build OS=darwin CPU=amd64
        GZIP=-9 tar -C workspace/ -cvf satisfy_darwin-amd64.tar.gz . --owner=0 --group=0

        export VERSION="${GITHUB_REF/refs\/tags\//}"
        make publish OS=linux CPU=amd64
        GZIP=-9 tar -C workspace/ -cvf satisfy_linux-amd64.tar.gz . --owner=0 --group=0

    - id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: satisfy_linux-amd64.tar.gz
        asset_name: satisfy_linux-amd64.tar.gz
        asset_content_type: application/tar+gzip

    - uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: satisfy_darwin-amd64.tar.gz
        asset_name: satisfy_darwin-amd64.tar.gz
        asset_content_type: application/tar+gzip
