name: Go

on:
  push:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
    - run: echo '${{ secrets.DOCKER_PASSWORD }}' | docker login --username '${{ secrets.DOCKER_USERNAME }}' --password-stdin
    - name: Build
      run: |
        VERSION="${{ github.sha }}" make build OS=darwin CPU=amd64
        tar -czvf satisfy_darwin-amd64.tar.gz workspace/*

        VERSION="${{ github.sha }}" make publish OS=linux CPU=amd64
        tar -czvf satisfy_linux-amd64.tar.gz workspace/*

    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: release-${{ github.sha }}
    #     release_name: Release release-${{ github.sha }}
    #     draft: false
    #     prerelease: true

    # - name: Upload Release Asset (Linux)
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: satisfy_linux-amd64.tar.gz
    #     asset_name: satisfy_linux-amd64.tar.gz
    #     asset_content_type: application/tar+gzip

    # - name: Upload Release Asset (Darwin)
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: satisfy_darwin-amd64.tar.gz
    #     asset_name: satisfy_darwin-amd64.tar.gz
    #     asset_content_type: application/tar+gzip

    # - name: Push to Docker
    #   uses: docker/build-push-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    #     repository: smartystreets/satisfy
    #     tag_with_ref: true
    #     tag_with_sha: true
